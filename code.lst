Microsoft (R) Macro Assembler Version 14.38.33130.0	    11/15/24 01:07:20
code.asm						     Page 1 - 1


				.686
				.model flat
				extern __write : PROC
				extern _ExitProcess@4 : PROC
				extern _MessageBoxA@16 : PROC
				extern _puts : PROC

				public _main

 00000000			.data
 00000000 31 32 33 34 35	    liczba db '12345',0
	   00
 00000006 00000000		    w2  dd 0
 0000000A 00000000		    w1  dd 0
 0000000E 00000000		    w0  dd 0
 00000012 00000000		    _a2 dd 0
 00000016 00000000		    _a1 dd 0
 0000001A 00000000		    _a0 dd 0

 00000000			.code
 00000000			    wyswietl_96 PROC
 00000000  55			        push ebp
 00000001  8B EC		        mov ebp, esp
				        ;parametry wejściowe ecx, edx, eax - 96-bitowa liczba
 00000003  83 EC 18		        sub esp, 24   ; zmienne lokalne
 00000006  53			        push ebx
 00000007  56			        push esi
 00000008  57			        push edi

 00000009  8B 45 08		        mov eax, [ebp+8]   ; część najmłodsza
 0000000C  8B 55 0C		        mov edx, [ebp+12]  ; część środkowa
 0000000F  8B 4D 10		        mov ecx, [ebp+16]  ; część najstarsza
 00000012  89 0D 00000006 R	        mov w2, ecx
 00000018  89 15 0000000A R	        mov w1, edx
 0000001E  A3 0000000E R	        mov w0, eax

 00000023  BB 0000000A		        mov ebx, 10        ; dzielnik
 00000028  B9 00000000		        mov ecx, 0         ; licznik cyfr

 0000002D			    et:
 0000002D  A1 00000006 R	        mov eax, w2        ; wczytaj najstarszą część
 00000032  A3 00000012 R	        mov _a2, eax
 00000037  A1 0000000A R	        mov eax, w1        ; wczytaj środkową część
 0000003C  A3 00000016 R	        mov _a1, eax
 00000041  A1 0000000E R	        mov eax, w0        ; wczytaj najmłodszą część
 00000046  A3 0000001A R	        mov _a0, eax

 0000004B  BA 00000000		        mov edx, 0
 00000050  A1 00000012 R	        mov eax, _a2       ; podziel najstarszą część
 00000055  F7 F3		        div ebx
 00000057  A3 00000006 R	        mov w2, eax

 0000005C  A1 00000016 R	        mov eax, _a1       ; podziel środkową część z resztą z poprzedniej
 00000061  F7 F3		        div ebx
 00000063  A3 0000000A R	        mov w1, eax

 00000068  A1 0000001A R	        mov eax, _a0       ; podziel najmłodszą część z resztą
 0000006D  F7 F3		        div ebx
 0000006F  A3 0000000E R	        mov w0, eax

 00000074  80 C2 30		        add dl, '0'        ; zamień na znak ASCII
 00000077  52			        push edx
 00000078  41			        inc ecx
 00000079  03 05 00000006 R	        add eax, w2
 0000007F  75 AC		        jnz et

 00000081  8D 75 E8		        lea esi, [ebp-24]
 00000084			    et2:
 00000084  5A			        pop edx
 00000085  88 16		        mov [esi], dl
 00000087  46			        inc esi
 00000088  E2 FA		        loop et2

 0000008A  C6 06 00		        mov [esi], byte ptr 0   ; zakończ string zerem

 0000008D  8D 5D E8		        lea ebx, [ebp-24]
				    

 00000090  6A 00		        push 0
 00000092  53			        push ebx               ; wskaźnik do tekstu (bufor)
 00000093  53			        push ebx			   ; wskaźnik do tekstu (tytuł)
 00000094  6A 00		        push 0
 00000096  E8 00000000 E	        call _MessageBoxA@16 

 0000009B  53			        push ebx
 0000009C  E8 00000000 E	        call _puts             

 000000A1  B8 000004D2		        mov eax, 1234
 000000A6  5F			        pop edi
 000000A7  5E			        pop esi
 000000A8  5B			        pop ebx
 000000A9  83 C4 18		        add esp, 24        ; usuń zmienne lokalne
 000000AC  5D			        pop ebp
 000000AD  C3			        ret
 000000AE			    wyswietl_96 ENDP

 000000AE			_main PROC
 000000AE  6A 00		    push 0    ; ECX - najstarsza część
 000000B0  6A 01		    push 1    ; EDX - środkowa część
 000000B2  6A 00		    push 0    ; EAX - najmłodsza część

 000000B4  E8 FFFFFF47		    call wyswietl_96
 000000B9  83 EC 0C		    sub esp, 12

 000000BC  6A 00		    push 0
 000000BE  E8 00000000 E	    call _ExitProcess@4
 000000C3			_main ENDP
				END
Microsoft (R) Macro Assembler Version 14.38.33130.0	    11/15/24 01:07:20
code.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 0000001E Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000000C3 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_main  . . . . . . . . . . . . .	P Near	 000000AE _TEXT	Length= 00000015 Public
wyswietl_96  . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000AE Public
  et . . . . . . . . . . . . . .	L Near	 0000002D _TEXT	
  et2  . . . . . . . . . . . . .	L Near	 00000084 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_ExitProcess@4 . . . . . . . . .	L Near	 00000000 FLAT	External
_MessageBoxA@16  . . . . . . . .	L Near	 00000000 FLAT	External
__write  . . . . . . . . . . . .	L Near	 00000000 FLAT	External
_a0  . . . . . . . . . . . . . .	DWord	 0000001A _DATA	
_a1  . . . . . . . . . . . . . .	DWord	 00000016 _DATA	
_a2  . . . . . . . . . . . . . .	DWord	 00000012 _DATA	
_puts  . . . . . . . . . . . . .	L Near	 00000000 FLAT	External
liczba . . . . . . . . . . . . .	Byte	 00000000 _DATA	
w0 . . . . . . . . . . . . . . .	DWord	 0000000E _DATA	
w1 . . . . . . . . . . . . . . .	DWord	 0000000A _DATA	
w2 . . . . . . . . . . . . . . .	DWord	 00000006 _DATA	

	   0 Warnings
	   0 Errors
