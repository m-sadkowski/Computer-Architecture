Microsoft (R) Macro Assembler Version 14.38.33130.0	    11/29/24 00:24:38
code.asm						     Page 1 - 1


				.686
				.model flat
				public _roznica
				extern _malloc : PROC

 00000000			.code
 00000000				_roznica PROC
 00000000  55					push ebp
 00000001  8B EC				mov ebp, esp

 00000003  52					push edx
 00000004  56					push esi
 00000005  57					push edi

 00000006  8B 55 08				mov edx, [ebp + 8] ; adres a w edx
 00000009  8B 5D 0C				mov ebx, [ebp + 12] ; adres b w ebx
 0000000C  8B 4D 10				mov ecx, [ebp + 16] ; rozmiar tablic

 0000000F  8B C1				mov eax, ecx ; d³ugoœæ long long int w bajtach
 00000011  BE 00000008				mov esi, 8
 00000016  F7 E6				mul esi ; d³ugoœæ tablicy w bajtach (rozmiar * 8)
 00000018  50					push eax
 00000019  E8 00000000 E			call _malloc       ; Alokujemy pamiêæ
 0000001E  83 C4 04				add esp, 4

 00000021  8B F8				mov edi, eax ; adres nowej tablicy
 00000023  33 F6				xor esi, esi ; indeks = 0
 00000025  8B 55 08				mov edx, [ebp + 8] ; adres a w edx - po raz drugi, bo w poprzedniej operacji zosta³ nadpisany (malloc)
 00000028  8B 5D 0C				mov ebx, [ebp + 12] ; adres b w ebx
 0000002B  8B 4D 10				mov ecx, [ebp + 16] ; rozmiar tablic

 0000002E				petla:
						; Starsza czêœæ
 0000002E  8B 04 F2				mov eax, [edx + esi * 8] ; eax = a[i]
 00000031  52					push edx
 00000032  8B 14 F3				mov edx, [ebx + esi * 8] ; edx = b[i]
 00000035  2B C2				sub eax, edx ; eax = a[i] - b[i]
 00000037  5A					pop edx 
 00000038  57					push edi
 00000039  8D 3C F7				lea edi, [edi + esi * 8] ; edi = &c[i]
 0000003C  89 07				mov [edi], eax ; c[i] = a[i] - b[i]
 0000003E  5F					pop edi 

						; M³odsza czêœæ 
 0000003F  8B 44 F2 04				mov eax, [edx + esi * 8 + 4] ; eax = a[i]
 00000043  52					push edx
 00000044  8B 54 F3 04				mov edx, [ebx + esi * 8 + 4] ; edx = b[i]
 00000048  1B C2				sbb eax, edx ; sbb - sub with borrow (odejmowanie z przeniesieniem), jeœli poprzednia operacja odejmowania wykona³a siê z przeniesieniem, to odejmujemy 1
 0000004A  5A					pop edx
 0000004B  57					push edi
 0000004C  8D 7C F7 04				lea edi, [edi + esi * 8 + 4] ; edi = &c[i]
 00000050  89 07				mov [edi], eax ; c[i] = a[i] - b[i]
 00000052  5F					pop edi

						; Zwiêkszamy licznik i pêtla
 00000053  46					inc esi
 00000054  E2 D8				loop petla

						; Zwracamy adres nowej tablicy
 00000056  8B C7				mov eax, edi

 00000058  5A					pop edx
 00000059  5F					pop edi
 0000005A  5E					pop esi
 0000005B  5D					pop ebp
 0000005C  C3					ret
 0000005D				_roznica ENDP
				END
Microsoft (R) Macro Assembler Version 14.38.33130.0	    11/29/24 00:24:38
code.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000005D Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_roznica . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000005D Public
  petla  . . . . . . . . . . . .	L Near	 0000002E _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_malloc  . . . . . . . . . . . .	L Near	 00000000 FLAT	External

	   0 Warnings
	   0 Errors
