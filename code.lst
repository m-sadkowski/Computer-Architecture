Microsoft (R) Macro Assembler Version 14.38.33130.0	    12/12/24 22:11:13
code.asm						     Page 1 - 1


				.686
				.model flat
				public _nowy_exp

 00000000			.data
 00000000 00000001		mnoznik dd 1

 00000000			.code
 00000000				_nowy_exp PROC
 00000000  55					push ebp ; zapisanie zawarto띾i EBP na stosie
 00000001  8B EC				mov ebp, esp ; kopiowanie zawarto띾i ESP do EBP

 00000003  9B DB E3				finit ; inicjalizacja koprocesora

 00000006  D9 45 08				fld dword ptr [ebp + 8] ; za쓰dowanie x na stos koprocesora
 00000009  D9 E8				fld1 ; za쓰dowanie 1 na stos koprocesora
 0000000B  D9 E8				fld1 ; za쓰dowanie 1 na stos koprocesora
 0000000D  D9 E8				fld1 ; za쓰dowanie 1 na stos koprocesora
						; ST(0) = 1, ST(1) = 1, ST(2) = 1, ST(3) = x
						; suma, mianownik, licznik, x

 0000000F  B9 00000013				mov ecx, 19

 00000014				ptl:
						; ST(0) = suma, ST(1) = mianownik, ST(2) = licznik, ST(3) = x

 00000014  D9 C2				fld st(2) ; na wierzcho쓴k przesy쓰my licznik
						; ST(0) = licznik, ST(1) = suma, ST(2) = mianownik, ST(3) = licznik, ST(4) = x

 00000016  D8 CC				fmul st(0), st(4)
						; ST(0) = licznik * x, ST(1) = suma, ST(2) = mianownik, ST(3) = licznik, ST(4) = x

 00000018  DD D3				fst st(3)
						; ST(0) = licznik * x, ST(1) = suma, ST(2) = mianownik, ST(3) = licznik * x, ST(4) = x

 0000001A  DB 05 00000000 R			fild dword ptr mnoznik
						; ST(0) = mnoznik, ST(1) = licznik * x, ST(2) = suma, ST(3) = mianownik, ST(4) = licznik * x, ST(5) = x

 00000020  D8 CB				fmul st(0), st(3)
						; ST(0) = mnoznik * mianownik, ST(1) = licznik * x, ST(2) = suma, ST(3) = mianownik, ST(4) = licznik * x, ST(5) = x

 00000022  DD D3				fst st(3)
						; ST(0) = mnoznik * mianownik, ST(1) = licznik * x, ST(2) = suma, ST(3) = mnoznik * mianownik, ST(4) = licznik * x, ST(5) = x

 00000024  DE F9				fdivp
						; ST(0) = (licznik * x) / (mnoznik * mianownik), ST(1) = licznik * x, ST(2) = suma, ST(3) = mnoznik * mianownik, ST(4) = licznik * x, ST(5) = x
						; ST(0) = (licznik * x) / (mnoznik * mianownik), ST(1) = suma, ST(2) = mnoznik * mianownik, ST(3) = licznik * x, ST(4) = x

 00000026  DE C1				faddp
						; ST(0) = ((licznik * x) / (mnoznik * mianownik)) + suma, ST(1) = suma, ST(2) = mnoznik * mianownik, ST(3) = licznik * x, ST(4) = x
						; ST(0) = ((licznik * x) / (mnoznik * mianownik)) + suma, ST(1) = mnoznik * mianownik, ST(2) = licznik * x, ST(3) = x

 00000028  83 05 00000000 R			add dword ptr mnoznik, 1 ; mnoznik++
	   01

 0000002F  49					dec ecx ; zmniejszenie licznika p社li
 00000030  75 E2				jnz ptl

 00000032  5D					pop ebp
 00000033  C3					ret
 00000034				_nowy_exp ENDP
				END
Microsoft (R) Macro Assembler Version 14.38.33130.0	    12/12/24 22:11:13
code.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000004 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000034 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_nowy_exp  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000034 Public
  ptl  . . . . . . . . . . . . .	L Near	 00000014 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
mnoznik  . . . . . . . . . . . .	DWord	 00000000 _DATA	

	   0 Warnings
	   0 Errors
